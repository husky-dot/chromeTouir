正则表达式（RegEx）教程#1： JS正则表达式简介


hellow 各位小伙伴大家好，我们见面了。。。。最近在学习正则表达式，为了巩固自己的学习成果，所以就以视频的方式来记录自己的学习过程，关于正则表达式，首先要说一下，这个东西如果想学好，是有一定难度的。但，还好，我们在工作中，需要用正则表达式来解决的问题并不多，所以我学习的目的还是以基础为准，具体的要学到哪个程序，这个还是需要大家，根据自己的情况来掌握。 好了废话不多说，那我们开始吧。


正则表达式是很多程序员不愿编码部分，也是欠缺，甚至空白的一部分，因为正则规则确实是繁琐，复杂，烧脑的。其实我也不想去学习它，但它又经常出现在我们的身边，如：当我们登录网页的时候，经常会遇到用户名或者邮箱不符合规定的格式，或者是该密码无效，毫无疑问，这种检查的规则一般使用正则来做的。简而言之，使用正则表达式可以判断指定字符串是否符合我们所规定的标准。

例如，我们可以创建一个正则表达式来，我们网站特定的表单邮箱字段。该正则表达包含 必须在特定的位置带有
 @符号，并且还必须以 .com 或 .org或 .co.uk 这样的扩展结束。

好的，这就是我们使用正则表达式可以做的事情。

接着我们来看几个简单的例子。

换到表单：

这里我们有一个用户注册表单，主要验证一些用户相关的字段，这个表单我们会在后面视频 讲解。

现在我们测试一下，输入电子了邮箱。。。然后可以看到变成橙色，并且在下面看到一些错误提示、接着输入正确的格式，然后变成绿色，。


我们会看一在编程中使用正则表达式的重要性，向用户提供这中反馈。那正则表达式看起来长什么样的呢。它看起来像这样的，
额，这什么鬼，它看起来像随机的字符串。不过在本系列结束后，我保证你会确切知道字符中每个字符代表的含义。而且你也可以编写自己的正则表达式了。

在本系列中，我们主要着眼于基本的正则表达式，并以为工作内容为导向来学习运用正则。

好了，正则的基础介绍就到这里了，最后如果你喜欢本系列的教程，还请分享并点个赞，谢谢大家，我们下期再见





第二节

上节课，我们知道了正则表达式在一些表单验证是如此有用。接着，我们来学习一下正则的简单方法，这里我们一个

https://regex101.com/ 网站在线工具。首先，选择  js 的风格，然后关掉一些标志。




第三节  (字符类)

1)脱字符（^）2）连字符（-）

字符类（class）表示有一系列字符可供选择，只要匹配其中一个就可以了。所有可供选择的字符都放在方括号内，比如[xyz] 表示x、y、z之中任选一个匹配。

在上节课中，我们所做就是创建了这个非常简单的正则表达式来匹配 xiaozhi ，这种匹配模式是很单一的，我们想要做的就是匹配更多可能 的模式。例如，匹配电子邮箱，我们不是在这匹配，固定写死一个固邮箱，而是匹配所有的邮箱。

以xiaozhi 这个为例，我们想匹配 xiaozhi 或者 liaozhi 这两个姓名。为了匹配这两个字符串，我们可以使用 字符类或者 字符集的 .


[xl]iaozhi   

[abc123]

[abc123]000


接下来，我们来创建一个排除集，排除集的意思就是说我们要匹配除哪些字符外


[^p]000

接着我们来思考另一个问题，就是我们要匹配字母中的每个字符要怎么表示，
我们可能会这样写[abcdefghijklmnopqrst]

这种方式是可行，但过于冗长了，也容易犯错，幸运的是，正则为我们提供了表示范围的字符，范围的字符，我们下节课单独讲解，那今天 就到这里了，我们下节见，886





第四节  (范围类)

某些情况下，对于连续序列的字符，连字符（-）用来提供简写形式，表示字符的连续范围。比如，[abc]可以写成[a-c]，[0123456789]可以写成[0-9]，同理[A-Z]表示26个大写字母。


[a-z]nijia
[a-n]nijia
[l-n]nijia

如果要匹配大写字母呢，两种方式，标志位和改成大写字母  A到Z

除了字母， 数字也是可以使用连字符的 [0123456789]可以写成[0-9]

[0-9]nijia    0nijia  6jijia

[5-9]nijia    0nijia  6jijia


[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]

15345068955  像这样一遍又一遍的重复事情， 我们有一种更容易的方法 



第五节  (重复类)


上节课

如果我们想重复某个字符，我们有几中方式，如果在后面加 +，+号表示1次或多次，  

30次  000001111111111111111111111112233366

显然这不会和电话号码匹配，因为我们的号码是11位，所以我们需要确切的数量，
那么我们如何指定我们想要的确切数量，删除加号，使用 {}

[0-9]{11}

如果我们想用字母而不是数字来匹配呢，[a-z]{5}  ninja  hello
如果想要介于5到8之间呢，

 [a-z]{5, 8}  ninja  hello hellwollllllll

[0-9]{5, 8}    123456789

[0-9]{5, } 666666666666666666666

  


量词符

? 问号表示某个模式出现0次或1次，等同于{0, 1}。
* 星号表示某个模式出现0次或多次，等同于{0,}。
+ 加号表示某个模式出现1次或多次，等同于{1,}。



 第六节 元字符

注意这些字符前面都有一个反斜杠，如果没有就表示普通的字符。

\d 1 2  3 4

\w

\s

\d\s\w


稍微复杂点的
\d{3}\s\w{5}

123 nijia
987 hello
987 hell9




 第7节 特殊字符

开始和结束模式。，我们通过一个简单的例子，来解释它们两兄弟的概念。

假设我们网页上有一个表单，表单要求用户在其中一个字段输入一个特定单词，比如是5个字母
所以我需要一个正则表达式用来告诉我，用户何时输入了5个确切的字符。

通过 上几节课的学习，我们知道 要匹配字母可以用字符集 [a-z], [A-Z]   全局  g。接着我们需要它是5个字符

使用我们重复类 [a-z]{5}

hello
nijia  niji

问题就在这里，如果我继续输入字母的话 nijiaaaadf dsafdsaf,
我们会得到无数个的匹配。或者 我们不使用全局标志， 我们仍然会得到匹配。

这样在表单验证的时候，该正则仍然会说，很好，我们已匹配到一个结果，所以我的表彰就会通过，
但这样我们就会得到后面的这些垃圾字符。

我们并不想后面这些，我们只需要前面这5个。如果在继续输入，我们并不希望用户再次输入。

aaadd dsafsafsdanijiaddad

那我们该怎么做呢，为了达到我们的要求，我们只能让用户输入5个，这个5词必须字段的开头和结尾。

所以我们可以使用 ^  $字符。

匹配输入的开始

^[a-z]{5}

kjsahddsafsaf

[a-z]{5}$
11111


[a-z]{5}$

adafasdfasdfsdfs






  













































