
第一节

Hello 小伙伴，我们又见面啦，我是小智。 因为公司项目需要搞一个 谷歌插件，所以这段时间 一直在查资料学习相关的知识，

一方面为了总结自己所学习，另一方希望能给刚入门谷歌插件的同学一点启发，所以就有本系列教程。废话不多说，让我们开始吧。

~~~~ 转场

谷歌插件主要用于扩充 谷歌览器功能的一个小型程序，是对浏览器的一种增强。在 Chrome 帮助下，我们可以随时随地的修改任何网页的外观。那么创建  Chrome 扩展的先决定条件是什么？

只需要掌握 Html css 和 js 基础知识即可。 当然， 我们也可以选择像 JQ 这样的库，用来更方便的操作 DOM。



在本系列中主要涉及的一些点

核心概念：manifest.json，content-scripts  background，event-pages ，popup 等


浏览器的UI界面：Browser Action，Page Actions，右键菜单，桌面通知等

消息通信：popup 和 background，popup	和 content-scripts  等


chrome 扩展其实是压缩在一起的一组文件(.crx 后缀的压缩包)，包括 HTML, CSSS，JavaScript脚本，图片及其它任何需要的文件。

在开发应用（扩展）时，需要把这些文件都放到同一个目录下。发布应用（扩展）时，这个目录全部打包到一个应用（扩展）名是 .crx 的压缩文件中。有了这个压缩文件我们就可以部署到谷歌网上应用商店了，用户也就可以从中下载了。




在接下来的视频我们会一个一个涉及上述概念，每个视频时长可能很短，但这会让你了解不同的概念，好，我们下个视频见。



第二节

创建 chrome 插件的第一步就是编写 manifest.json 文件，这是一个Chrome插件最重要也是必不可少的文件，用来配置所有和插件相关的配置。它的作用是

告诉Chrome关于这个扩展的相关信息

它是一个 JSON 格式的文件

其中，manifest_version、name、version3个是必不可少的，description和icons是推荐的。

接着我们来创建一个简单的hello world 插件


总结：在开始下一个视频之前，我们来先快速回顾一下我们目前所学到的东西。

我们了解到每个插件都有一个 manifest.json 的文件，该文件描述的该插件是做什么的，还有配置插件的图标，

然后也有一个表示ui的html页面，在html 中我们可以引入js用来 实现页面的交互，最后我们还引入了 css 样式表，负责为html元素添加样式，所有的这些文件都包含在同个文件下。ok 牢记这些基础，让我们深入研究更复杂的浏览器操作。

如果你对谷歌插件感兴趣，点个赞及关注呗，我们下个视频见，886.

第三节

上节课我们知道了如何开发一个简单的谷歌插件，接着再做一个预算管理的插件，这个插件稍微比较复杂的谷歌插件。同样也会包含一些核心概念以及 chrome api 的使用。

预算管理功能包括下面这几点：browser action 使用，可以输入我需要的支出金额，并显示支出的总金额。

另外我们还可以设置支出的上限，并通知用户是否已达到该限制了。最后我们还应该向用户提供重置总金额和限制额度的选项页面。废话不多说，那我们开始吧！

---转场



在编写此功能的时候，需要牢记两种情况

第一个是用户第一次使用我们的扩展程序时，在这种情况下，我们的 总数为 0，所以当用户输入金额时，我们将其与 0相加。

另一种情况就是当total有数据时，比如 100，当用户输入金额时，我们将其与 100 相加。相加并更新 total 的值。


第17课开始

第四节

  "options_page": "options.html",


对于谷歌插件，除了popup弹窗外，我们还可以指定一个选项页面。

这个选项页面，我们可以通过右键图标的“选项”入口打开，跟popup页面一样，选项页也是一个 html文件，包含 CSS 和 js.

在预算管理插件中，需要在选项页中做两件事。

首先，允许用户设置预算限制。第二就是提供一个重置总支出的按钮，该按钮重置当前的总支出。

废话不多说，让我们开始选项页面吧，let s   go。

转场~~~~

有了popup 的一些交互，我们对options 的使用就比较简单了，首先用户输入上限值，然后点击保存上限按钮。

将我们输入的值保存到 chrome.storage 中。

当 点击重置总支出的按钮时，我们需要将已保存在 chrome.storage 的 total 值 清0。我们回到代码，来实现一下。


好的，到这里我的选项页面就能完美的工作的，有了上限的值，我们就需要在 popup页面上判断，如果当前用户输入大于
我们设置的上限值，就需要给用户发送通知消息，通知消息的内容，我们下节课讲解。最后，如果你喜欢本系列教程，
来请点个赞以及关注一下呗，好了，我们下个视频见，88.






第19课开始

    "notifications"

第五节

上节课我们讲到了选项页面的配置及使用，同时也留下一个问题，就是当用户输入的大于我们设置的上限值时，我们需要通知用户输入的值已超过，

那这节课呢，我们就来讲解一下怎么通知用户，废话不多说，让我们开始吧。


转场~~~~~~~





第六节

后台（姑且这么翻译吧），是一个常驻的页面，它的生命周期是插件中所有类型页面中最长的，它随着浏览器的打开而打开，随着浏览器的关闭而关闭，所以通常把需要一直运行的、启动就运行的、全局的代码放在background里面。

在一些典型的插件中，UI页面，如popup页面或者options页面，在需要更新一些状态时，会向后台页面请求数据，而当后台页面检测到状态发生改变时，也会通知UI界面刷新。


background的权限非常高，几乎可以调用所有的Chrome扩展API（除了devtools），而且它可以无限制跨域，也就是可以跨域访问任何网站而无需要求对方设置CORS。



配置中，background可以通过page指定一张网页，也可以通过scripts直接指定一个JS，Chrome会自动为这个JS生成一个默认的网页。

这里也介绍一下event-pages，它是一个什么东西呢？鉴于background生命周期太长，长时间挂载后台可能会影响性能，所以Google又弄一个event-pages，在配置文件上，它与background的唯一区别就是多了一个persistent参数：


它的生命周期是：在被需要时加载，在空闲时被关闭，什么叫被需要时呢？比如第一次安装、插件更新、有content-script向它发送消息，等等。



当用户在网页中点击鼠标右键后，会唤出一个菜单，在上面有复制、粘贴和翻译等选项，为用户提供快捷便利的功能。Chrome也将这里开放给了开发者，也就是说我们可以把自己所编写的插件功能放到右键菜单中。

那我们这里准备使用contextMenus来做什么呢？打开我们的购物网站，假设我们正在购物，当我们选中价格后右键然后出现一个右键菜单，我们需要把这笔钱算到我们的预算管理插件中，所以就需要把钱添加到我们的变量上，

这里回到ppt




有了这些知识，接下来我们来试着创建一个右键菜单或添加一些功能。



创建右键菜单需要注意的一件事是background 中运行，而不是popup内。

我们需要右键菜单仅选择一些数字时才显示，所以这里我们选择使用 event page 而不是 background page。

现在我们来看看如果创建右键菜单：






























































































































