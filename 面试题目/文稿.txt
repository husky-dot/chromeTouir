第一个是什么意思？比如，我现在页面方式是 get 方式，那么你现在回退，它不会重新提交，而 post 是会的

第5：这个也是非常要注重的一个点，如果说自己在做业务开发的时候，想把这个参数留在浏览器里面，那你就要考虑使用 get 方法，而不是 post 方法。

第6：限制大小一般为 2kb，不同浏览器限制大小 也不一样，所以，要注意的事，如果使用的get 请求，拼接的参数不能太长，否则会被浏览器截断。这个截断是因为 http 协议对这个长度是有限制 的，它发不出去，所以导致截断这种情况。所以后台会拿不到正确的地址，这个是经常出错的，很多人会经常 不注意.



好吧，记住这就5条应该就没有问题了，这个也没啥技巧，背下就完事了。



第二节：HTTP 状态码

206 表示什么呢？读一遍，这个 Range 是什么意思呢，它是范围的意思 。


206 Partial Content表示该服务器已经成功处理了部分 GET 请求。类似于 FlashGet 或者迅雷这类的 HTTP下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。


302 是临时重定向   301 是 永久重定向







第三节：什么是DOCTYPE及作用

在说这之前我们需要先了解一下什么是 DTD 也就是 document type definition，文档类型定义，什么是文档呀，大家要记住

THML XML 都是一种文档。且它们是不同的文档类型，那么 DTD 就是来描述这个文档类型的定义的。

然后念一边定义

这个说的太晦涩难懂了，大白话说就是 DTD 告诉浏览器我是什么文档类型。浏览器根据这个判断我用什么引擎来解析渲染它。


DOCTYPE 是什么 呀

然后念一边定义

大白话说  DOCTYPE 直接告诉浏览器什么是 DTD，也就是说 DOCTYPE 通知浏览器告诉当前的文档包含的是哪个 DTD，也就是文档类型。


这时候面试官可能会追问 常见的DOCTYPE有哪些 


HTML 4.0.1 有两个版本，一个严格模式和一个传统模式


那么我们需要记住这两个版本吗，当然是记不住的，也没必要，如果面试官有问起，你知道 4.0 版本有两个，一个是严格模式，一个是 传统模式，就 OK 啦








第四节：浏览器的渲染过程

第一步 把 THML 转成  HTML Parser ，也是就 Dom Parser 转成 Dom，然后 CSS 按 CSS 规则和 CSS 解释器围成 CSSOM  tree， 最后 Dom tree 和 CSSOM tree 加个 attachment 结合就形成了 render tree , render tree 就是告诉浏览器我渲染的结构就出来。与它平行的还有 Layout ，什么是 Layout ?


刚才说的 render tree 它不包含 html 具体内容，它也不知道这个位置是什么 ，也就是在 Layout 之前 某个元素比如说 div 具体应该画在屏幕的哪个位置。有了 Layout 浏览器就能知道就能精确 的知道要显示这些 dom 元素真正的位置 宽，高，颜色等




第五节-提升页面的性能有哪些

第一个是 资源压缩合并，减少 HTTP 请求，然后还有开启 htpp 压缩，它们都是一类内容，就是资源压缩合并，就是相当于把资源文件变小，这是一类。

第二类就是 非核心代码异步加载，当你说完这个的时候，面试官可能会说，异步加载的方式有哪些？如果你还能

回答出来，他可能还会问你 异步加载方式的区别是什么 ，就是层层递进，由浅入深。

现在你可以想一下，你有没有掌握 ，如果你不清楚， 我们下节课会专门讲。

第三类就是利用 浏览器缓存，这是提升页面性能最直接的方法，这个大家注意一定要说出来。

面试写可能还会问你缓存的分类，这个分类，有很多小伙伴很多会说 sessionstorage,localstorage。

这两个不是一个概念，浏览器缓存和那些存储方式不是一回事。

那如果能说出缓存的分类，那么面试官可能还会问，缓存的原理是什么 。缓存这块是比较重要的内容，小伙伴们需要好好的掌握。

第四类是使用 CDN,  cdn 加速资源是非常快的，这是属于网络这块的。举个例子，比如我们的网站中，使用了

n 个js ，n个图片，那么我要怎么让客户最快的时间请求过来，除了第一个的资源压缩，那使用 cdn 也是一个重要

一个选择。尤其是当页面第一次打开的时候，浏览器缓存是没有效果 的，那么使用 cdn 效果是非常明显的

第5个是预解析 DNS

这个给大家写了两种答案，

相信大家应该看过第二种方式, 叫 dns-prefetch，说明就是   DNS预解析

涉及这个内容，面试官可能会问你说  从浏览器输入url到页面真正的渲染完，中间发生了哪些环节。

其中和一步就是 dns 解析，当页面中涉及到多个域名的时候, dns 解析效果是非常明显的，那么这里优化的点就是

预解析 dns，那么怎么预解析 dns 呢  就使用这个语句 

那第一个有啥用呢？

这里有个额外的知识，就是页面中所有的 a 标签，在一些高级浏览器里面默认打开 dns 预解析 的

你不用加这句话，a 标签也可以做到预解析的，这是浏览器的一个功能

但是你的页面是 https 协议开关的，很多浏览器默认关闭 dns 预解析的，
那么通过第一句话就是强制打开 a 标签这个 dns 预解析。这一点，大家一定要注意

如果你能把这句话说出来，应该是面试中出彩的一个地方，面试官会对你刮目相看。






 第六节  异步加载

异步加载这块两个问题，一个是异步加载的方式，一个是异步加载的区别

第一个是动态脚本加载，这个比较好理解就是 document,.creaeeelement 一个script 标签
也就是用 js创建一个标签，最后把它加到 body 上去。这个是动态加载最简单的方式。

defer  和  async 都 属于异步加载的方式，它怎么用呢，其实就是在加载 js 的时候在 script 标签上

加上这两个属性就能完成异步加载

 异步加载区别是什么

defer 是在 HTML 解析完之后才会执行，如果是多个，按照加载的顺序依次执行

async 是在加载完之后立即执行，如果是多个，执行顺序和加载顺序无关

这句话要注意 defer 能保证加载的顺序，但 async 就不可以了

比如说我有三个脚本都是 async 加载 的，这三个哪个先回来，哪个先执行跟它加载的顺序无关，这一点要特别注意



我们可以 1 都是在2 的前面，这是为啥，因为 我们的两个文件都 比较小，又是读的本地磁盘的文件，所以加载速度，谁在前面谁在后，肯定是1在前，2在后。

那怎么去尝试呢，你把第一个文件拿网上的文件做比较，或者把第一个文件变大，那么最后就 有可能看出来 2在前面执行了。





































































